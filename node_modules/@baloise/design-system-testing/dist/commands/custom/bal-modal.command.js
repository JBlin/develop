"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var helpers_1 = require("../helpers");
Cypress.Commands.add('balModalFindOpen', {
    prevSubject: false,
}, function (options) {
    var o = (0, helpers_1.wrapOptions)(options);
    return cy
        .getComponent('bal-modal[aria-presented="true"]', o)
        .then(function ($el) {
        (0, helpers_1.log)('balModalFindOpen', '', $el, options);
        return $el;
    })
        .waitForComponents();
});
Cypress.Commands.add('balModalIsOpen', {
    prevSubject: true,
}, function (subject, options) {
    (0, helpers_1.log)('balAccordionIsOpen', '', subject, options);
    var o = (0, helpers_1.wrapOptions)(options);
    return cy.wrapComponent(subject, o).should('have.attr', 'aria-presented', 'true');
});
Cypress.Commands.add('balModalIsClosed', {
    prevSubject: true,
}, function (subject, options) {
    (0, helpers_1.log)('balModalIsClosed', '', subject, options);
    var o = (0, helpers_1.wrapOptions)(options);
    return cy.wrapComponent(subject, o).should('not.have.attr', 'aria-presented');
});
Cypress.Commands.add('balModalClose', {
    prevSubject: true,
}, function (subject, options) {
    (0, helpers_1.log)('balModalIsClosed', '', subject, options);
    var o = (0, helpers_1.wrapOptions)(options);
    return cy.wrapComponent(subject, o).then(function ($modal) {
        return cy.wrapComponent($modal, o).find('.data-test-modal-close', o).waitForComponents().click();
    });
});
