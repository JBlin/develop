"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var helpers_1 = require("../helpers");
var selectors_1 = require("../../selectors");
Cypress.Commands.add('balPaginationFindPages', {
    prevSubject: true,
}, function (subject, options) {
    var o = (0, helpers_1.wrapOptions)(options);
    return cy
        .wrapComponent(subject, o)
        .find(selectors_1.selectors.pagination.pages + ':visible', o)
        .then(function ($el) {
        (0, helpers_1.log)('balPaginationFindPages', '', $el, options);
        return $el;
    })
        .waitForComponents(o);
});
Cypress.Commands.add('balPaginationFindCurrentPage', {
    prevSubject: true,
}, function (subject, options) {
    var o = (0, helpers_1.wrapOptions)(options);
    return cy
        .wrapComponent(subject, o)
        .find("".concat(selectors_1.selectors.pagination.button, ".is-primary:visible"), o)
        .then(function ($el) {
        (0, helpers_1.log)('balPaginationFindCurrentPage', '', $el, options);
        return $el;
    })
        .waitForComponents(o);
});
Cypress.Commands.add('balPaginationFindNextButton', {
    prevSubject: true,
}, function (subject, options) {
    var o = (0, helpers_1.wrapOptions)(options);
    return cy
        .wrapComponent(subject, o)
        .find(selectors_1.selectors.pagination.next, o)
        .then(function ($el) {
        (0, helpers_1.log)('balPaginationFindNextButton', '', $el, options);
        return $el;
    })
        .waitForComponents(o);
});
Cypress.Commands.add('balPaginationFindPreviousButton', {
    prevSubject: true,
}, function (subject, options) {
    var o = (0, helpers_1.wrapOptions)(options);
    return cy
        .wrapComponent(subject, o)
        .find(selectors_1.selectors.pagination.previous, o)
        .then(function ($el) {
        (0, helpers_1.log)('balPaginationFindPreviousButton', '', $el, options);
        return $el;
    })
        .waitForComponents(o);
});
