"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var date_fns_1 = require("date-fns");
var helpers_1 = require("../helpers");
var formatDateString = function (date) {
    var day = "".concat(date.getDate());
    var month = "".concat(date.getMonth() + 1);
    var pad = function (text) { return (text.length === 1 ? "0".concat(text) : text); };
    return "".concat(date.getFullYear(), "-").concat(pad(month), "-").concat(pad(day));
};
var selectorDayBox = function (date) { return "[data-date=\"".concat(formatDateString(date), "\"]"); };
Cypress.Commands.add('balDatepickerToggle', {
    prevSubject: true,
}, function (subject, options) {
    (0, helpers_1.log)('balDatepickerToggle', '', subject, options);
    var o = (0, helpers_1.wrapOptions)(options);
    return cy.wrapComponent(subject, o).find('.datepicker-trigger-icon', o).click(o).wrapComponent(subject, o);
});
Cypress.Commands.add('balDatepickerIsOpen', {
    prevSubject: true,
}, function (subject, options) {
    (0, helpers_1.log)('balDatepickerIsOpen', '', subject, options);
    var o = (0, helpers_1.wrapOptions)(options);
    return cy
        .wrapComponent(subject, o)
        .find('bal-popover', o)
        .should('have.attr', 'aria-presented', 'true')
        .wrapComponent(subject, o);
});
Cypress.Commands.add('balDatepickerIsClosed', {
    prevSubject: true,
}, function (subject, options) {
    (0, helpers_1.log)('balDatepickerIsClosed', '', subject, options);
    var o = (0, helpers_1.wrapOptions)(options);
    return cy
        .wrapComponent(subject, o)
        .find('bal-popover', o)
        .should('not.have.attr', 'aria-presented')
        .wrapComponent(subject, o);
});
Cypress.Commands.add('balDatepickerPick', {
    prevSubject: true,
}, function (subject, date, options) {
    (0, helpers_1.log)('balDatepickerPick', formatDateString(date), subject, options);
    var o = (0, helpers_1.wrapOptions)(options);
    return cy
        .wrapComponent(subject, o)
        .balDatepickerIsOpen(o)
        .within(function () {
        cy.get('.bal-datepicker-pagination__month-and-year__select--month select', o)
            .first(o)
            .select((0, date_fns_1.getMonth)(date).toString(), o);
        cy.get('.bal-datepicker-pagination__month-and-year__select--year select', o)
            .first(o)
            .select((0, date_fns_1.getYear)(date).toString(), o);
        cy.get(selectorDayBox(date), o).click(o);
    })
        .wrapComponent(subject, o);
});
Cypress.Commands.add('balDatepickerIsDateInRange', {
    prevSubject: true,
}, function (subject, date, options) {
    (0, helpers_1.log)('balDatepickerIsDateInRange', formatDateString(date), subject, options);
    var o = (0, helpers_1.wrapOptions)(options);
    return cy
        .wrapComponent(subject, o)
        .find(selectorDayBox(date), __assign(__assign({}, o), { force: true }))
        .should('not.have.class', 'is-disabled')
        .wrapComponent(subject, o);
});
Cypress.Commands.add('balDatepickerIsDateNotInRange', {
    prevSubject: true,
}, function (subject, date, options) {
    (0, helpers_1.log)('balDatepickerIsDateNotInRange', formatDateString(date), subject, options);
    var o = (0, helpers_1.wrapOptions)(options);
    return cy
        .wrapComponent(subject, o)
        .find(selectorDayBox(date), __assign(__assign({}, o), { force: true }))
        .should('have.class', 'is-disabled')
        .wrapComponent(subject, o);
});
