"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var helpers_1 = require("../helpers");
var selectors_1 = require("../../selectors");
Cypress.Commands.add('balPopoverToggle', {
    prevSubject: true,
}, function (subject, options) {
    (0, helpers_1.log)('balPopoverToggle', '', subject, options);
    var o = (0, helpers_1.wrapOptions)(options);
    return cy.wrapComponent(subject, o).find("[".concat(selectors_1.selectors.popover.trigger, "]"), o).click(o).wrapComponent(subject, o);
});
Cypress.Commands.add('balPopoverIsOpen', {
    prevSubject: true,
}, function (subject, options) {
    (0, helpers_1.log)('balPopoverIsOpen', '', subject, options);
    var o = (0, helpers_1.wrapOptions)(options);
    return cy.wrapComponent(subject, o).should('have.attr', 'aria-presented', 'true');
});
Cypress.Commands.add('balPopoverIsClosed', {
    prevSubject: true,
}, function (subject, options) {
    (0, helpers_1.log)('balPopoverIsClosed', '', subject, options);
    var o = (0, helpers_1.wrapOptions)(options);
    return cy.wrapComponent(subject, o).should('not.have.attr', 'aria-presented');
});
Cypress.Commands.add('balPopoverTriggerContains', {
    prevSubject: true,
}, function (subject, content, options) {
    (0, helpers_1.log)('balPopoverTriggerContains', content, subject, options);
    var o = (0, helpers_1.wrapOptions)(options);
    return cy
        .wrapComponent(subject, o)
        .find("[".concat(selectors_1.selectors.popover.trigger, "]"), o)
        .contains(content, options)
        .wrapComponent(subject, o);
});
Cypress.Commands.add('balPopoverContentContains', {
    prevSubject: true,
}, function (subject, content, options) {
    (0, helpers_1.log)('balPopoverContentContains', content, subject, options);
    var o = (0, helpers_1.wrapOptions)(options);
    return cy
        .wrapComponent(subject, o)
        .find(selectors_1.selectors.popover.content, o)
        .contains(content, options)
        .wrapComponent(subject, o);
});
