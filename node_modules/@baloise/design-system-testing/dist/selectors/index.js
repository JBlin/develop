"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.selectors = exports.parseDataTestID = exports.dataTestSelector = exports.byTestId = void 0;
var selectors_util_1 = require("./selectors.util");
var selectors_util_2 = require("./selectors.util");
Object.defineProperty(exports, "byTestId", { enumerable: true, get: function () { return selectors_util_2.byTestId; } });
Object.defineProperty(exports, "dataTestSelector", { enumerable: true, get: function () { return selectors_util_2.dataTestSelector; } });
Object.defineProperty(exports, "parseDataTestID", { enumerable: true, get: function () { return selectors_util_2.parseDataTestID; } });
/**
 * Selectors
 */
exports.selectors = {
    accordion: {
        /**
         * The trigger button, which shows and hides the content / details.
         */
        trigger: (0, selectors_util_1.byTestId)('bal-accordion-trigger'),
        /**
         * The content or the hidden part of the accordion.
         */
        details: (0, selectors_util_1.byTestId)('bal-accordion-details'),
        /**
         * The header or visible part of the accordion
         */
        summary: (0, selectors_util_1.byTestId)('bal-accordion-summary'),
    },
    badge: {
        /**
         * Badge label.
         */
        label: (0, selectors_util_1.byTestId)('bal-badge-label'),
    },
    button: {
        /**
         * Native button element.
         */
        native: (0, selectors_util_1.byTestId)('bal-button'),
        /**
         * Button label.
         */
        label: (0, selectors_util_1.byTestId)('bal-button-label'),
    },
    carousel: {
        /**
         * Pagination left control.
         */
        paginationPrevious: (0, selectors_util_1.byTestId)('bal-pagination-controls-left'),
        /**
         * Pagination right control.
         */
        paginationNext: (0, selectors_util_1.byTestId)('bal-pagination-controls-right'),
        /**
         * Carousel right control.
         */
        carouselControlPrevious: (0, selectors_util_1.byTestId)('bal-carousel-control-left'),
        /**
         * Carousel left control.
         */
        carouselControlNext: (0, selectors_util_1.byTestId)('bal-carousel-control-right'),
    },
    close: {
        /**
         * The trigger button.
         */
        button: (0, selectors_util_1.byTestId)('bal-close'),
    },
    data: {
        /**
         * Editable button.
         */
        editable: (0, selectors_util_1.byTestId)('bal-data-value-button'),
    },
    footer: {
        /**
         * Language select element.
         */
        language: (0, selectors_util_1.byTestId)('bal-footer-language"'),
    },
    heading: {
        /**
         * Native h1 element.
         */
        native: (0, selectors_util_1.byTestId)('bal-heading'),
    },
    notification: {
        /**
         * Notification content element.
         */
        content: (0, selectors_util_1.byTestId)('bal-notification-content'),
    },
    pagination: {
        /**
         * Pagination left control.
         */
        previous: (0, selectors_util_1.byTestId)('bal-pagination-controls-left'),
        /**
         * Pagination right control.
         */
        next: (0, selectors_util_1.byTestId)('bal-pagination-controls-right'),
        /**
         * Pagination ul list.
         */
        list: (0, selectors_util_1.byTestId)('bal-pagination-list'),
        /**
         * The number of the page.
         */
        pageNumber: (0, selectors_util_1.byTestId)('bal-pagination-page-number'),
        /**
         * bal-button of the number of the page..
         */
        pages: '.bal-pagination__nav__pagination-list > li > bal-button',
        /**
         * The native button of the number of the page.
         */
        button: '.bal-pagination__nav__pagination-list > li > bal-button > button',
    },
    tag: {
        /**
         * Tag label..
         */
        label: (0, selectors_util_1.byTestId)('bal-tag-label'),
        /**
         * Close button.
         */
        close: (0, selectors_util_1.byTestId)('bal-tag-close'),
    },
    text: {
        /**
         * Native p element.
         */
        native: (0, selectors_util_1.byTestId)('bal-text'),
    },
    checkbox: {
        /**
         * Native input element.
         */
        input: (0, selectors_util_1.byTestId)('bal-checkbox-input'),
        /**
         * Label element.
         */
        label: (0, selectors_util_1.byTestId)('bal-checkbox-label'),
        /**
         * Label span element.
         */
        text: (0, selectors_util_1.byTestId)('bal-checkbox-text'),
    },
    datepicker: {
        /**
         * Native input element.
         */
        input: (0, selectors_util_1.byTestId)('bal-datepicker-input'),
    },
    field: {
        /**
         * Hint element.
         */
        hint: (0, selectors_util_1.byTestId)('bal-field-hint'),
    },
    fileUpload: {
        /**
         * Native input element.
         */
        input: (0, selectors_util_1.byTestId)('bal-file-upload-input'),
        /**
         * Native span element.
         */
        label: (0, selectors_util_1.byTestId)('bal-file-upload-label'),
    },
    slider: {
        /**
         * Native input element.
         */
        native: (0, selectors_util_1.byTestId)('bal-input-slider'),
    },
    inputStepper: {
        /**
         * Decrease button.
         */
        decrease: (0, selectors_util_1.byTestId)('bal-input-stepper-decrease'),
        /**
         * Increase button.
         */
        increase: (0, selectors_util_1.byTestId)('bal-input-stepper-increase'),
        /**
         * Native input element.
         */
        native: (0, selectors_util_1.byTestId)('bal-input-stepper'),
        /**
         * Text element.
         */
        text: (0, selectors_util_1.byTestId)('bal-input-stepper-text'),
    },
    input: {
        /**
         * Native input element.
         */
        native: (0, selectors_util_1.byTestId)('bal-input'),
    },
    dateInput: {
        /**
         * Native input element.
         */
        native: (0, selectors_util_1.byTestId)('bal-date-input'),
    },
    numberInput: {
        /**
         * Native input element.
         */
        native: (0, selectors_util_1.byTestId)('bal-number-input'),
    },
    radio: {
        /**
         * Native input element.
         */
        input: (0, selectors_util_1.byTestId)('bal-radio-input'),
        /**
         * Native label element.
         */
        label: (0, selectors_util_1.byTestId)('bal-radio-label'),
        /**
         * Native span element.
         */
        text: (0, selectors_util_1.byTestId)('bal-radio-text'),
    },
    select: {
        /**
         * Native input element.
         */
        input: 'input.data-test-select-input',
        /**
         * Select option.
         */
        options: 'button.bal-select__option',
        /**
         * Multi select tag .
         */
        chips: (0, selectors_util_1.byTestId)('bal-select-chip'),
    },
    popover: {
        /**
         * Popover trigger.
         */
        trigger: 'bal-popover-trigger',
        /**
         * Popover content element.
         */
        content: (0, selectors_util_1.byTestId)('bal-popover-content'),
    },
    textarea: {
        /**
         * Native input element.
         */
        native: (0, selectors_util_1.byTestId)('bal-textarea-input'),
    },
    modal: {
        /**
         * Modal element.
         */
        main: 'div.modal',
    },
    steps: {
        /**
         * Step option
         */
        option: (0, selectors_util_1.byTestId)('bal-steps-option'),
        /**
         * Step option label
         */
        optionLabel: (0, selectors_util_1.byTestId)('bal-steps-option-label'),
    },
    tabs: {
        /**
         * Tab item.
         */
        item: (0, selectors_util_1.byTestId)('bal-tabs-item'),
        /**
         * Tab item label.
         */
        itemLabel: (0, selectors_util_1.byTestId)('bal-tabs-item-label'),
    },
    toast: {
        /**
         * Toast element.
         */
        main: '.bal-notices > .bal-toast',
        /**
         * Toast label element.
         */
        label: (0, selectors_util_1.byTestId)('bal-toast-label'),
        /**
         * Toast close element.
         */
        close: (0, selectors_util_1.byTestId)('bal-toast-close'),
    },
    snackbar: {
        /**
         * Snackbar element.
         */
        main: '.bal-notices > .bal-snackbar',
        /**
         * Snackbar heading element.
         */
        heading: (0, selectors_util_1.byTestId)('bal-snackbar-heading'),
        /**
         * Snackbar label element.
         */
        label: (0, selectors_util_1.byTestId)('bal-snackbar-label'),
        /**
         * Snackbar close element.
         */
        close: (0, selectors_util_1.byTestId)('bal-snackbar-close'),
        /**
         * Snackbar action element.
         */
        action: (0, selectors_util_1.byTestId)('bal-snackbar-action'),
    },
    hint: {
        /**
         * Hint trigger element.
         */
        trigger: (0, selectors_util_1.byTestId)('bal-hint-trigger'),
        /**
         * Hint content element.
         */
        content: (0, selectors_util_1.byTestId)('bal-hint-content'),
        /**
         * Hint close element.
         */
        close: (0, selectors_util_1.byTestId)('bal-hint-close'),
    },
};
