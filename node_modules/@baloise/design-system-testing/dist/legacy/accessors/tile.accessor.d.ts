import { Andable } from './mixins/andable';
import { Attachable } from './mixins/attachable';
import { Attributable } from './mixins/attributable';
import { Clickable } from './mixins/clickable';
import { Containable } from './mixins/containable';
import { Disableable } from './mixins/disableable';
import { Eachable } from './mixins/eachable';
import { Existable } from './mixins/existable';
import { Findable } from './mixins/findable';
import { Invokable } from './mixins/invokable';
import { Lengthable } from './mixins/lengthable';
import { Accessor, Mixin } from './mixins/mixins';
import { NthSelectable } from './mixins/nthSelectable';
import { Shouldable } from './mixins/shouldable';
import { Thenable } from './mixins/thenable';
import { Urlable } from './mixins/urlable';
import { Visible } from './mixins/visible';
import { Waitable } from './mixins/waitable';
interface TileAccessorType extends Andable<TileAccessorType>, Clickable<TileAccessorType>, Existable<TileAccessorType>, Containable<TileAccessorType>, Disableable<TileAccessorType>, Shouldable<TileAccessorType>, Visible<TileAccessorType>, NthSelectable<TileAccessorType>, Attributable<TileAccessorType>, Urlable<TileAccessorType>, Findable<TileAccessorType>, Waitable<TileAccessorType>, Invokable<TileAccessorType>, Thenable<TileAccessorType>, Lengthable<TileAccessorType>, Eachable<TileAccessorType>, Attachable<TileAccessorType> {
    assertBodyExists(): TileAccessorType;
    assertBodyNotExists(): TileAccessorType;
    containsTileContent(content: string): TileAccessorType;
}
export declare const TileClickableMixin: Mixin;
export declare const TileContainableMixin: Mixin;
export declare const TileAccessor: Accessor<TileAccessorType>;
export {};
