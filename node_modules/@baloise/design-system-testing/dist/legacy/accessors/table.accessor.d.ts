/// <reference types="cypress" />
import { Andable } from './mixins/andable';
import { Attachable } from './mixins/attachable';
import { Attributable } from './mixins/attributable';
import { Clickable } from './mixins/clickable';
import { Containable } from './mixins/containable';
import { Disableable } from './mixins/disableable';
import { Eachable } from './mixins/eachable';
import { Existable } from './mixins/existable';
import { Findable } from './mixins/findable';
import { Invokable } from './mixins/invokable';
import { Lengthable } from './mixins/lengthable';
import { Accessor, Mixin } from './mixins/mixins';
import { NthSelectable } from './mixins/nthSelectable';
import { Shouldable } from './mixins/shouldable';
import { Thenable } from './mixins/thenable';
import { Urlable } from './mixins/urlable';
import { Visible } from './mixins/visible';
import { Waitable } from './mixins/waitable';
interface TableAccessorType extends Andable<TableAccessorType>, Clickable<TableAccessorType>, Containable<TableAccessorType>, Existable<TableAccessorType>, Shouldable<TableAccessorType>, Disableable<TableAccessorType>, Visible<TableAccessorType>, NthSelectable<TableAccessorType>, Attributable<TableAccessorType>, Urlable<TableAccessorType>, Findable<TableAccessorType>, Waitable<TableAccessorType>, Eachable<TableAccessorType>, Invokable<TableAccessorType>, Thenable<TableAccessorType>, Lengthable<TableAccessorType>, Attachable<TableAccessorType> {
    rowContains(index: number, content: string): TableAccessorType;
    clickOnRow(index: number, options?: Partial<Cypress.ClickOptions>): TableAccessorType;
}
export declare const TableRowClickableMixin: Mixin;
export declare const TableRowContainableMixin: Mixin;
export declare const TableAccessor: Accessor<TableAccessorType>;
export {};
