import { Andable } from './mixins/andable';
import { Attributable } from './mixins/attributable';
import { Blurable } from './mixins/blurable';
import { Checkable } from './mixins/checkable';
import { Clickable } from './mixins/clickable';
import { Containable } from './mixins/containable';
import { Disableable } from './mixins/disableable';
import { Eachable } from './mixins/eachable';
import { Existable } from './mixins/existable';
import { Findable } from './mixins/findable';
import { Invokable } from './mixins/invokable';
import { Lengthable } from './mixins/lengthable';
import { Accessor } from './mixins/mixins';
import { NthSelectable } from './mixins/nthSelectable';
import { Shouldable } from './mixins/shouldable';
import { Thenable } from './mixins/thenable';
import { Urlable } from './mixins/urlable';
import { Visible } from './mixins/visible';
import { Waitable } from './mixins/waitable';
interface RadioAccessorType extends Andable<RadioAccessorType>, Blurable<RadioAccessorType>, Checkable<RadioAccessorType>, Containable<RadioAccessorType>, Clickable<RadioAccessorType>, Existable<RadioAccessorType>, Disableable<RadioAccessorType>, Shouldable<RadioAccessorType>, Visible<RadioAccessorType>, NthSelectable<RadioAccessorType>, Attributable<RadioAccessorType>, Urlable<RadioAccessorType>, Findable<RadioAccessorType>, Waitable<RadioAccessorType>, Invokable<RadioAccessorType>, Thenable<RadioAccessorType>, Lengthable<RadioAccessorType>, Eachable<RadioAccessorType> {
}
export declare const RadioAccessor: Accessor<RadioAccessorType>;
export {};
