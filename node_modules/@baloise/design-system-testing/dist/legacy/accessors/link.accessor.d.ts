import { Andable } from './mixins/andable';
import { Attachable } from './mixins/attachable';
import { Attributable } from './mixins/attributable';
import { Blurable } from './mixins/blurable';
import { Clickable } from './mixins/clickable';
import { Containable } from './mixins/containable';
import { Disableable } from './mixins/disableable';
import { Eachable } from './mixins/eachable';
import { Existable } from './mixins/existable';
import { Findable } from './mixins/findable';
import { Invokable } from './mixins/invokable';
import { Lengthable } from './mixins/lengthable';
import { Accessor, Mixin } from './mixins/mixins';
import { NthSelectable } from './mixins/nthSelectable';
import { Shouldable } from './mixins/shouldable';
import { Thenable } from './mixins/thenable';
import { Urlable } from './mixins/urlable';
import { Visible } from './mixins/visible';
import { Waitable } from './mixins/waitable';
export declare enum Target {
    newTab = "_blank",
    sameTab = "_self",
    parent = "_parent",
    top = "_top"
}
interface LinkAccessorType extends Andable<LinkAccessorType>, Blurable<LinkAccessorType>, Clickable<LinkAccessorType>, Existable<LinkAccessorType>, Shouldable<LinkAccessorType>, Containable<LinkAccessorType>, Disableable<LinkAccessorType>, Visible<LinkAccessorType>, NthSelectable<LinkAccessorType>, Attributable<LinkAccessorType>, Urlable<LinkAccessorType>, Findable<LinkAccessorType>, Waitable<LinkAccessorType>, Invokable<LinkAccessorType>, Thenable<LinkAccessorType>, Lengthable<LinkAccessorType>, Eachable<LinkAccessorType>, Attachable<LinkAccessorType> {
    clickLink(): LinkAccessorType;
    assertLinkOpeningTarget(target: Target): LinkAccessorType;
    assertLinkWithoutTarget(): LinkAccessorType;
    assertHrefContains(href: string): LinkAccessorType;
    assertHrefEquals(href: string): LinkAccessorType;
}
export declare const LinkClickableMixin: Mixin;
export declare const LinkWithTargetAttribute: Mixin;
export declare const LinkWithoutTargetAttribute: Mixin;
export declare const LinkHrefContainsAssertableMixin: Mixin;
export declare const LinkHrefEqualsAssertableMixin: Mixin;
export declare const LinkAccessor: Accessor<LinkAccessorType>;
export {};
