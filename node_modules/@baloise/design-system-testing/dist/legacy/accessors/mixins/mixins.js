"use strict";
/// <reference types="cypress" />
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createAccessor = void 0;
var hasPrintedDeprecation = false;
var createAccessor = function () {
    var mixins = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        mixins[_i] = arguments[_i];
    }
    return function (selector) { return ({
        get: function (element) {
            if (element === void 0) { element = cy.get(selector); }
            if (!hasPrintedDeprecation) {
                console.warn('[DEPRECATED] - Mixins are no longer supported use cypress commands instead!');
                hasPrintedDeprecation = true;
            }
            var creator = function () { return exports.createAccessor.apply(void 0, mixins)(selector).get(element); };
            return mixins.reduce(function (acc, mixin) { return (__assign(__assign({}, acc), mixin({ selector: selector, element: element, creator: creator }))); }, {});
        },
    }); };
};
exports.createAccessor = createAccessor;
