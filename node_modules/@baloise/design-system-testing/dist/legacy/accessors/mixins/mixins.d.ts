export interface AccessorGetter<T> {
    get(element?: Cypress.Chainable): T;
}
export declare type Accessor<T> = (selector: string) => AccessorGetter<T>;
export declare type Mixin = <T>(context: MixinContext<T>) => any;
export declare type AccessorCreator<T> = () => T;
export interface MixinContext<T> {
    selector: string;
    element: Cypress.Chainable;
    creator: AccessorCreator<T>;
}
export declare const createAccessor: <T>(...mixins: Mixin[]) => (selector: string) => AccessorGetter<T>;
