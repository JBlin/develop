/// <reference types="cypress" />
import { Andable } from './mixins/andable';
import { Attributable } from './mixins/attributable';
import { Blurable } from './mixins/blurable';
import { Clickable } from './mixins/clickable';
import { Containable } from './mixins/containable';
import { Eachable } from './mixins/eachable';
import { Existable } from './mixins/existable';
import { Findable } from './mixins/findable';
import { Invokable } from './mixins/invokable';
import { Lengthable } from './mixins/lengthable';
import { Accessor, Mixin } from './mixins/mixins';
import { NthSelectable } from './mixins/nthSelectable';
import { Shouldable } from './mixins/shouldable';
import { Thenable } from './mixins/thenable';
import { Urlable } from './mixins/urlable';
import { Visible } from './mixins/visible';
import { Waitable } from './mixins/waitable';
interface AccordionTileAccessorType extends Andable<AccordionTileAccessorType>, Blurable<AccordionTileAccessorType>, Clickable<AccordionTileAccessorType>, Existable<AccordionTileAccessorType>, Visible<AccordionTileAccessorType>, Containable<AccordionTileAccessorType>, Shouldable<AccordionTileAccessorType>, NthSelectable<AccordionTileAccessorType>, Attributable<AccordionTileAccessorType>, Urlable<AccordionTileAccessorType>, Findable<AccordionTileAccessorType>, Waitable<AccordionTileAccessorType>, Invokable<AccordionTileAccessorType>, Thenable<AccordionTileAccessorType>, Lengthable<AccordionTileAccessorType>, Eachable<AccordionTileAccessorType> {
    assertBodyExists(): AccordionTileAccessorType;
    assertBodyNotExists(): AccordionTileAccessorType;
    clickBody(options?: Partial<Cypress.ClickOptions>): AccordionTileAccessorType;
}
export declare const AccordionTileClickableMixin: Mixin;
export declare const AccordionClickableMixin: Mixin;
export declare const AccordionContainableMixin: Mixin;
export declare const AccordionAssertableMixin: Mixin;
export declare const AccordionAccessor: Accessor<AccordionTileAccessorType>;
export {};
