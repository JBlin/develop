"use strict";
/// <reference types="cypress" />
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccordionAccessor = exports.AccordionAssertableMixin = exports.AccordionContainableMixin = exports.AccordionClickableMixin = exports.AccordionTileClickableMixin = void 0;
var andable_1 = require("./mixins/andable");
var attributable_1 = require("./mixins/attributable");
var blurable_1 = require("./mixins/blurable");
var eachable_1 = require("./mixins/eachable");
var existable_1 = require("./mixins/existable");
var findable_1 = require("./mixins/findable");
var invokable_1 = require("./mixins/invokable");
var lengthable_1 = require("./mixins/lengthable");
var mixins_1 = require("./mixins/mixins");
var nthSelectable_1 = require("./mixins/nthSelectable");
var shouldable_1 = require("./mixins/shouldable");
var thenable_1 = require("./mixins/thenable");
var urlable_1 = require("./mixins/urlable");
var visible_1 = require("./mixins/visible");
var waitable_1 = require("./mixins/waitable");
var AccordionTileClickableMixin = function (_a) {
    var element = _a.element, creator = _a.creator;
    return ({
        clickBody: function (options) {
            element.find('.show-body-link-container.bal-divider-top').click(options);
            return creator();
        },
    });
};
exports.AccordionTileClickableMixin = AccordionTileClickableMixin;
var AccordionClickableMixin = function (_a) {
    var selector = _a.selector, creator = _a.creator;
    return ({
        click: function (options) {
            cy.get(selector).click(options);
            return creator();
        },
    });
};
exports.AccordionClickableMixin = AccordionClickableMixin;
var AccordionContainableMixin = function (_a) {
    var selector = _a.selector, creator = _a.creator;
    return ({
        contains: function (content) {
            cy.get(selector).contains(content);
            return creator();
        },
    });
};
exports.AccordionContainableMixin = AccordionContainableMixin;
var AccordionAssertableMixin = function (_a) {
    var selector = _a.selector, creator = _a.creator;
    return ({
        assertBodyExists: function () {
            cy.get(selector).balAccordionIsOpen();
            return creator();
        },
        assertBodyNotExists: function () {
            cy.get(selector).balAccordionIsClosed();
            return creator();
        },
    });
};
exports.AccordionAssertableMixin = AccordionAssertableMixin;
exports.AccordionAccessor = (0, mixins_1.createAccessor)(andable_1.AndableMixin, exports.AccordionClickableMixin, exports.AccordionAssertableMixin, exports.AccordionContainableMixin, existable_1.ExistableMixin, exports.AccordionTileClickableMixin, blurable_1.BlurableMixin, visible_1.VisibleMixin, shouldable_1.ShouldableMixin, nthSelectable_1.NthSelectableMixin, attributable_1.AttributableMixin, urlable_1.UrlableMixin, findable_1.FindableMixin, waitable_1.WaitableMixin, invokable_1.InvokableMixin, lengthable_1.LengthableMixin, thenable_1.ThenableMixin, eachable_1.EachableMixin);
