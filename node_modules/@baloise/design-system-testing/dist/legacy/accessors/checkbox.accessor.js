"use strict";
/// <reference types="cypress" />
Object.defineProperty(exports, "__esModule", { value: true });
exports.CheckboxAccessor = exports.CheckboxContainableMixin = exports.CheckboxClickableMixin = void 0;
var andable_1 = require("./mixins/andable");
var attributable_1 = require("./mixins/attributable");
var blurable_1 = require("./mixins/blurable");
var eachable_1 = require("./mixins/eachable");
var existable_1 = require("./mixins/existable");
var findable_1 = require("./mixins/findable");
var invokable_1 = require("./mixins/invokable");
var lengthable_1 = require("./mixins/lengthable");
var mixins_1 = require("./mixins/mixins");
var nthSelectable_1 = require("./mixins/nthSelectable");
var shouldable_1 = require("./mixins/shouldable");
var thenable_1 = require("./mixins/thenable");
var urlable_1 = require("./mixins/urlable");
var visible_1 = require("./mixins/visible");
var waitable_1 = require("./mixins/waitable");
var CheckboxClickableMixin = function (_a) {
    var selector = _a.selector, creator = _a.creator;
    return ({
        click: function (options) {
            cy.get(selector).click(options);
            return creator();
        },
        check: function (options) {
            cy.get(selector).check(options);
            return creator();
        },
        assertIsChecked: function (shouldBeChecked) {
            if (shouldBeChecked === void 0) { shouldBeChecked = true; }
            if (shouldBeChecked) {
                cy.get(selector).should('be.checked');
            }
            else {
                cy.get(selector).should('not.be.checked');
            }
            return creator();
        },
        assertIsDisabled: function () {
            cy.get(selector).should('be.disabled');
            return creator();
        },
        assertIsEnabled: function () {
            cy.get(selector).should('not.be.disabled');
            return creator();
        },
    });
};
exports.CheckboxClickableMixin = CheckboxClickableMixin;
var CheckboxContainableMixin = function (_a) {
    var creator = _a.creator, selector = _a.selector;
    return ({
        contains: function (content) {
            cy.get(selector).contains(content);
            return creator();
        },
    });
};
exports.CheckboxContainableMixin = CheckboxContainableMixin;
exports.CheckboxAccessor = (0, mixins_1.createAccessor)(andable_1.AndableMixin, exports.CheckboxClickableMixin, exports.CheckboxContainableMixin, existable_1.ExistableMixin, visible_1.VisibleMixin, nthSelectable_1.NthSelectableMixin, blurable_1.BlurableMixin, shouldable_1.ShouldableMixin, attributable_1.AttributableMixin, urlable_1.UrlableMixin, waitable_1.WaitableMixin, findable_1.FindableMixin, invokable_1.InvokableMixin, thenable_1.ThenableMixin, lengthable_1.LengthableMixin, eachable_1.EachableMixin);
