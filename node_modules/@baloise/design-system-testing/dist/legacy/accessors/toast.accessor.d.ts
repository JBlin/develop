import { Andable } from './mixins/andable';
import { Attributable } from './mixins/attributable';
import { Blurable } from './mixins/blurable';
import { Clickable } from './mixins/clickable';
import { Containable } from './mixins/containable';
import { Disableable } from './mixins/disableable';
import { Eachable } from './mixins/eachable';
import { Existable } from './mixins/existable';
import { Findable } from './mixins/findable';
import { Invokable } from './mixins/invokable';
import { Lengthable } from './mixins/lengthable';
import { Accessor, Mixin } from './mixins/mixins';
import { NthSelectable } from './mixins/nthSelectable';
import { Shouldable } from './mixins/shouldable';
import { Thenable } from './mixins/thenable';
import { Urlable } from './mixins/urlable';
import { Visible } from './mixins/visible';
import { Waitable } from './mixins/waitable';
interface ToastAccessorType extends Andable<ToastAccessorType>, Blurable<ToastAccessorType>, Clickable<ToastAccessorType>, Containable<ToastAccessorType>, Existable<ToastAccessorType>, Shouldable<ToastAccessorType>, Disableable<ToastAccessorType>, Visible<ToastAccessorType>, NthSelectable<ToastAccessorType>, Attributable<ToastAccessorType>, Urlable<ToastAccessorType>, Findable<ToastAccessorType>, Waitable<ToastAccessorType>, Invokable<ToastAccessorType>, Thenable<ToastAccessorType>, Lengthable<ToastAccessorType>, Eachable<ToastAccessorType> {
    assertToast(content: string): ToastAccessorType;
}
export declare const SuccessToastableMixin: Mixin;
export declare const ToastAccessor: Accessor<ToastAccessorType>;
export {};
